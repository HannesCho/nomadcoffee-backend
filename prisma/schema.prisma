// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Coffee {
  id        Int      @id @default(autoincrement())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id             Int          @id @default(autoincrement())
  username       String       @unique
  email          String       @unique
  name           String
  password       String
  bio            String?
  avatar         String?
  githubUsername String?      @unique
  followers      User[]       @relation("FollowRelation", references: [id])
  following      User[]       @relation("FollowRelation", references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  UserPhoto      UserPhoto[]
  shop           CoffeeShop[]
}

model UserPhoto {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  file      String
  caption   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CoffeeShop {
  id                Int              @id @default(autoincrement())
  name              String
  user              User             @relation(fields: [userId], references: [id])
  userId            Int
  latitude          String?
  longitude         String?
  photos            CoffeeShopPhoto? @relation(fields: [coffeeShopPhotoId], references: [id])
  coffeeShopPhotoId Int?             @unique
  categories        Category[]
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
}

model CoffeeShopPhoto {
  id         Int          @id @default(autoincrement())
  url        String       @unique
  shops      CoffeeShop[]
  shop_id    Int?
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique
  slug String

  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  CoffeeShop   CoffeeShop? @relation(fields: [coffeeShopId], references: [id])
  coffeeShopId Int?
}
